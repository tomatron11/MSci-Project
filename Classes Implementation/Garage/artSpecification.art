(* relation '->' *)
(* constructor backend *)
-backend  --- backend(_P1, _P2, _P3), _sig -> __user(_P1, _P2, _P3)
(* constructor seq *)
-sequenceDone  --- seq(__done, _C), _sig -> _C, _sig
-sequence _C1, _sig -> _C1P, _sigP --- seq(_C1, _C2), _sig -> seq(_C1P, _C2), _sigP
(* constructor deref *)
-variable __get(_sig, _R) |> _Z --- deref(_R), _sig -> _Z, _sig
(* constructor subClass *)
-subClass  --- subClass(_h, _c, _w, _d), _sig -> __user("subClass", _h, _c, _w, _d), _sig
(* constructor assign *)
-assign _n |> _ --- assign(_X, _n), _sig -> __done, __put(_sig, _X, _n)
-assignResolve _E, _sig -> _I, _sigP --- assign(_X, _E), _sig -> assign(_X, _I), _sigP
(* constructor object *)
-object  --- object(_h, _c, _nm, _co), _sig -> __user("object", _h, _c, _nm, _co), _sig
(* constructor printToFile *)
-printToFile  --- printToFile(_h), _sig -> __user("printToFile", _h), _sig

(*-----------------------*)

